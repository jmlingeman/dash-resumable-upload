{"version":3,"sources":["webpack:///webpack/bootstrap 84d0a326c7387956503f","webpack:///./index.js","webpack:///./components/Upload.react.js","webpack:///external \"React\"","webpack:///../~/prop-types/index.js","webpack:///../~/react-is/index.js","webpack:///../~/react-is/cjs/react-is.development.js","webpack:///../~/prop-types/factoryWithTypeCheckers.js","webpack:///../~/object-assign/index.js","webpack:///../~/prop-types/lib/ReactPropTypesSecret.js","webpack:///../~/prop-types/checkPropTypes.js","webpack:///../~/resumablejs/resumable.js"],"names":["Upload","React","Component","PropTypes","Resumablejs","props","state","progressBar","messageStatus","fileList","files","isPaused","isUploading","isHovered","isComplete","destinationDir","numFiles","numCompleted","toggleHovered","bind","cancelUpload","pauseUpload","startUpload","resumable","ResumableField","target","service","query","fileType","filetypes","maxFiles","maxFileSize","fileTypeErrorCallback","setState","testMethod","testChunks","headers","chunkSize","simultaneousUploads","forceChunkSize","assignBrowse","uploader","disableDragAndDrop","assignDrop","dropZone","on","file","subject","$","text","length","setProps","fileAddedMessage","onFileAdded","upload","fileServer","fileNameServer","objectServer","JSON","parse","fileName","currentFiles","push","fileNames","lastUploadedFile","completedMessage","onFileSuccess","isCompleted","showEnabledButtons","progress","parseInt","setTimeout","errorCount","onUploadErrorCallback","cancel","pause","e","preventDefault","textLabel","startButton","startButtonOther","click","cancelButton","pauseButton","getStyle","completeStyle","activeStyle","defaultStyle","getClass","disabledInput","disableClass","hoveredClass","uploadingClass","completeClass","className","id","node","fileAccept","disableInput","opacity","width","height","position","overflow","display","propTypes","number","string","disabledClass","pausedClass","object","arrayOf","bool","func","defaultProps","simultaneuosUploads","undefined"],"mappings":"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CA,EAAC;AACD;AACA;AACA;AACA;;;;;;;;;;AClBA;;AAEA;AACA;AACA,EAAC;AACD;AACA;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;;AAEA,+CAA8C,cAAc;;AAE5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,6FAA4F,eAAe;AAC3G;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;;;;;;;;;AClOA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV,8BAA6B;AAC7B,SAAQ;AACR;AACA;AACA;AACA;AACA,gCAA+B,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,6BAA4B;AAC5B,QAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB,gCAAgC;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;AC9kBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH,mCAAkC;AAClC;AACA;AACA;;AAEA;AACA,GAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAgB,sBAAsB;AACtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAA4G;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf,kBAAiB;AACjsBAAqB,sBAAsB;AAC3C;AACA;AACA,sBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,0BAAyB,cAAc;AACvC;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,QAAO;AACP;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,QAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;;AAEA;AACA;AACA;AACA;AACA,iBAAgB,WAAW;AAC3B,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA,gBAAe;AACfgBAAe;AACf,cAAa;AACb,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC;AAClC,UAAS;AACT;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,YAAW,IAAI;AACfcAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,wCAAwC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,uCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA,EAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/lib/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 84d0a326c7387956503f","/* eslint-disable import/prefer-default-export */\nimport Upload from './components/Upload.react';\n\nexport {\n    Upload\n};\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Resumablejs from \"resumablejs\";\n\nexport default class Upload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      progressBar: 0,\n      messageStatus: \"\",\n      fileList: { files: [] },\n      isPaused: true,\n      isUploading: false,\n      isHovered: false,\n      isComplete: false,\n      destinationDir: \"\",\n      numFiles: 0,\n      numCompleted: 0,\n    };\n    this.toggleHovered = this.toggleHovered.bind(this);\n    this.cancelUpload = this.cancelUpload.bind(this);\n    this.pauseUpload = this.pauseUpload.bind(this);\n    this.startUpload = this.startUpload.bind(this);\n    this.resumable = null;\n  }\n\n  componentDidMount() {\n    const ResumableField = new Resumablejs({\n      target: this.props.service,\n      query: {},\n      fileType: this.props.filetypes,\n      maxFiles: this.props.maxFiles,\n      maxFileSize: this.props.maxFileSize,\n      fileTypeErrorCallback: () => {\n        this.setState({\n          messageStatus: \"Invalid file type!\",\n        });\n      },\n      testMethod: \"get\",\n      testChunks: false,\n      headers: { \"Access-Control-Allow-Origin\": \"*\" },\n      chunkSize: this.props.chunkSize,\n      simultaneousUploads: this.props.simultaneousUploads,\n      forceChunkSize: false,\n    });\n\n    ResumableField.assignBrowse(this.uploader);\n\n    //Enable or Disable DragAnd Drop\n    if (this.props.disableDragAndDrop === false) {\n      ResumableField.assignDrop(this.dropZone);\n    }\n\n    ResumableField.on(\"fileAdded\", (file) => {\n      this.resumable.subject = $(\"#subject-number\").text();\n      let numFiles = this.state.numFiles;\n      numFiles = this.resumable.files.length;\n      this.setState({ numFiles: numFiles });\n      this.props.setProps({ numFiles: numFiles });\n\n      this.setState({\n        messageStatus:\n          this.props.fileAddedMessage || \" Files to upload: \" + numFiles,\n        isComplete: false,\n      });\n\n      if (typeof this.props.onFileAdded === \"function\") {\n        this.props.onFileAdded(file, this.resumable);\n      } else if (!this.state.isPaused) {\n        ResumableField.upload();\n      }\n    });\n\n    ResumableField.on(\"fileSuccess\", (file, fileServer) => {\n      if (this.props.fileNameServer) {\n        let objectServer = JSON.parse(fileServer);\n        file.fileName = objectServer[this.props.fileNameServer];\n      } else {\n        file.fileName = fileServer;\n      }\n      let currentFiles = this.state.fileList.files;\n      currentFiles.push(file);\n\n      let fileNames = this.props.fileNames;\n      fileNames.push(file.fileName);\n\n      let numCompleted = this.state.numCompleted;\n      numCompleted = numCompleted + 1;\n      this.setState({ numCompleted: numCompleted });\n\n      this.props.setProps({\n        fileNames: fileNames,\n        lastUploadedFile: file.fileName,\n        numCompleted: numCompleted,\n      });\n      this.setState(\n        {\n          fileList: { files: currentFiles },\n          messageStatus:\n            this.props.completedMessage + file.fileName + \". Files remaining to process: \" + (this.state.numFiles - this.state.numCompleted) || fileServer,\n        },\n        () => {\n          if (typeof this.props.onFileSuccess === \"function\") {\n            this.props.onFileSuccess(file, fileServer);\n          }\n        }\n      );\n    });\n\n    ResumableField.on(\"fileSuccess\", (file, fileServer) => {\n      if (this.props.setProps) {\n        this.props.setProps({\n          isCompleted: true,\n        });\n      }\n      this.setState({\n        isComplete: true,\n        showEnabledButtons: false,\n      });\n    });\n\n    ResumableField.on(\"progress\", () => {\n      this.setState({\n        isUploading: ResumableField.isUploading(),\n      });\n\n      if (ResumableField.progress() * 100 < 100) {\n        this.setState({\n          messageStatus: parseInt(ResumableField.progress() * 100, 10) + \"%\",\n          progressBar: ResumableField.progress() * 100,\n        });\n      } else {\n        setTimeout(() => {\n          this.setState({\n            progressBar: 0,\n          });\n        }, 1000);\n      }\n    });\n\n    ResumableField.on(\"fileError\", (file, errorCount) => {\n      this.props.onUploadErrorCallback(file, errorCount);\n    });\n\n    this.resumable = ResumableField;\n  }\n\n  cancelUpload() {\n    this.resumable.cancel();\n\n    this.setState({\n      fileList: { files: [] },\n    });\n  }\n\n  pauseUpload() {\n    if (!this.state.isPaused) {\n      this.resumable.pause();\n      this.setState({\n        isPaused: true,\n        isUploading: false,\n      });\n    } else {\n      this.resumable.upload();\n      this.setState({\n        isPaused: false,\n        isUploading: this.resumable.isUploading,\n      });\n    }\n  }\n\n  startUpload(e) {\n    e.preventDefault();\n    if (!this.state.isUploading) {\n      this.resumable.pause(false);\n      this.resumable.upload();\n      this.setState({\n        isPaused: false,\n        isUploading: true,\n      });\n    }\n  }\n\n  toggleHovered() {\n    this.setState({\n      isHovered: !this.state.isHovered,\n    });\n  }\n\n  render() {\n    let fileList = null;\n\n    let textLabel = null;\n    if (this.props.textLabel) {\n      textLabel = this.props.textLabel;\n    }\n\n    let startButton = null;\n    if (this.props.startButton) {\n      if (typeof this.props.startButton === \"boolean\")\n        startButton = (\n          <label>\n            <button\n              disabled={this.state.isUploading}\n              className=\"resumable-btn-start\"\n              onClick={this.startUpload}\n            >\n              {this.props.startButton && \"upload\"}\n            </button>\n          </label>\n        );\n      else if (typeof this.props.startButton === \"string\") {\n        let startButtonOther = $(\"#\" + this.props.startButton);\n        startButtonOther.click(this.startUpload);\n      } else startButton = this.props.startButton;\n    }\n\n    let cancelButton = null;\n    if (this.props.cancelButton) {\n      if (typeof this.props.cancelButton === \"boolean\")\n        cancelButton = (\n          <label>\n            <button\n              disabled={!this.state.isUploading}\n              className=\"resumable-btn-cancel\"\n              onClick={this.cancelUpload}\n            >\n              {this.props.cancelButton && \"cancel\"}\n            </button>\n          </label>\n        );\n      else cancelButton = this.props.cancelButton;\n    }\n\n    let pauseButton = null;\n    if (this.props.pauseButton) {\n      if (\n        typeof this.props.pauseButton === \"string\" ||\n        typeof this.props.pauseButton === \"boolean\"\n      )\n        pauseButton = (\n          <label>\n            <button\n              disabled={!this.state.isUploading}\n              className=\"resumable-btn-pause\"\n              onClick={this.pauseUpload}\n            >\n              {this.props.pauseButton &&\n                (this.state.isPaused ? \"resume\" : \"pause\")}\n            </button>\n          </label>\n        );\n      else pauseButton = this.props.pauseButton;\n    }\n\n    let getStyle = () => {\n      if (this.state.isComplete) {\n        return this.props.completeStyle;\n      } else if (this.state.isHovered || this.state.isUploading) {\n        return this.props.activeStyle;\n      } else {\n        return this.props.defaultStyle;\n      }\n    };\n\n    let getClass = () => {\n      if (this.props.disabledInput) {\n        return this.props.disableClass;\n      } else if (this.state.isHovered) {\n        return this.props.hoveredClass;\n      } else if (this.state.isUploading) {\n        return this.props.uploadingClass;\n      } else if (this.state.isComplete) {\n        return this.props.completeClass;\n      } else if (this.state.isPaused) {\n        return this.props.completeClass;\n      } else {\n        return this.props.className;\n      }\n    };\n\n    return (\n      <div\n        id={this.props.id}\n        className={getClass()}\n        ref={(node) => (this.dropZone = node)}\n      >\n        <label\n          style={getStyle()}\n          onMouseEnter={this.toggleHovered}\n          onMouseLeave={this.toggleHovered}\n        >\n          {this.state.messageStatus == \"\"\n            ? textLabel\n            : this.state.messageStatus}\n          <input\n            ref={(node) => (this.uploader = node)}\n            type=\"file\"\n            className=\"btn\"\n            name={this.props.id + \"-upload\"}\n            accept={this.props.fileAccept || \"*\"}\n            disabled={this.props.disableInput || false}\n            style={{\n              opacity: \"0\",\n              width: \"0.1px%\",\n              height: \"0.1px%\",\n              position: \"absolute\",\n              overflow: \"hidden\",\n              \"z-index\": \"-1\",\n            }}\n          />\n        </label>\n        <div\n          className=\"progress\"\n          style={{\n            display: this.state.progressBar === 0 ? \"none\" : \"block\",\n          }}\n        >\n          <div\n            className=\"progress-bar\"\n            style={{\n              width: this.state.progressBar + \"%\",\n              height: \"100%\",\n            }}\n          ></div>\n        </div>\n        {fileList}\n        {startButton}\n        {pauseButton}\n        {cancelButton}\n      </div>\n    );\n  }\n}\n\nUpload.propTypes = {\n  /**\n   * Maximum number of files that can be uploaded in one session\n   */\n  maxFiles: PropTypes.number,\n\n  /**\n   * Maximum size per file in bytes.\n   */\n  maxFileSize: PropTypes.number,\n\n  /**\n   * Size of file chunks to send to server.\n   */\n  chunkSize: PropTypes.number,\n\n  /**\n   * Number of simultaneous uploads to select\n   */\n  simultaneousUploads: PropTypes.number,\n\n  /**\n   * The service to send the files to\n   */\n  service: PropTypes.string,\n\n  /**\n   * Class to add to the upload component by default\n   */\n  className: PropTypes.string,\n\n  /**\n   * Class to add to the upload component when it is hovered\n   */\n  hoveredClass: PropTypes.string,\n\n  /**\n   * Class to add to the upload component when it is disabled\n   */\n  disabledClass: PropTypes.string,\n\n  /**\n   * Class to add to the upload component when it is paused\n   */\n  pausedClass: PropTypes.string,\n\n  /**\n   * Class to add to the upload component when it is complete\n   */\n  completeClass: PropTypes.string,\n\n  /**\n   * Class to add to the upload component when it is uploading\n   */\n  uploadingClass: PropTypes.string,\n\n  /**\n   * Style attributes to add to the upload component\n   */\n  defaultStyle: PropTypes.object,\n\n  /**\n   * Style when upload component is hovered over\n   */\n  activeStyle: PropTypes.object,\n\n  /**\n   * Style when upload is completed (upload finished)\n   */\n  completeStyle: PropTypes.object,\n\n  /**\n   * The string to display in the upload component\n   */\n  textLabel: PropTypes.string,\n\n  /**\n   * Message to display when upload completed\n   */\n  completedMessage: PropTypes.string,\n\n  /**\n   * The names of the files uploaded\n   */\n  fileNames: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * List of allowed file types, e.g. ['jpg', 'png']\n   */\n  filetypes: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * Whether or not to have a start button\n   */\n  startButton: PropTypes.bool,\n\n  /**\n   * Whether or not to have a pause button\n   */\n  pauseButton: PropTypes.bool,\n\n  /**\n   * Whether or not to have a cancel button\n   */\n  cancelButton: PropTypes.bool,\n\n  /**\n   * Whether or not to allow file drag and drop\n   */\n  disableDragAndDrop: PropTypes.bool,\n\n  /**\n   * Dash-supplied function for updating props\n   */\n  setProps: PropTypes.func,\n\n  /**\n   * User supplied id of this component\n   */\n  id: PropTypes.string,\n\n  isPaused: PropTypes.bool,\n\n  numFiles: PropTypes.number,\n\n  numCompleted: PropTypes.number,\n\n  lastUploadedFile: PropTypes.string,\n};\n\nUpload.defaultProps = {\n  maxFiles: 1,\n  maxFileSize: 1024 * 1024 * 10,\n  chunkSize: 1024 * 1024,\n  simultaneuosUploads: 1,\n  service: \"/upload\",\n  className: \"resumable-default\",\n  hoveredClass: \"resumable-hovered\",\n  completeClass: \"resumable-complete\",\n  disabledClass: \"resumable-disabled\",\n  pausedClass: \"resumable-paused\",\n  uploadingClass: \"resumable-uploading\",\n  defaultStyle: {},\n  activeStyle: {},\n  completeStyle: {},\n  textLabel: \"Click Here to Select a File\",\n  completedMessage: \"Finished processing \",\n  fileNames: [],\n  filetypes: undefined,\n  startButton: true,\n  pauseButton: true,\n  cancelButton: true,\n  disableDragAndDrop: false,\n  id: \"default-uploader-id\",\n  isPaused: true,\n  numFiles: 0,\n  numCompleted: 0,\n  lastUploadedFile: \"\",\n};\n\n\n\n// WEBPACK FOOTER //\n// ./components/Upload.react.js","(function() { module.exports = this[\"React\"]; }());\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 2\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/prop-types/index.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/react-is/index.js\n// module id = 4\n// module chunks = 0","/** @license React v16.8.6\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' ||\n  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\n}\n\n/**\n * Forked from fbjs/warning:\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n *\n * Only change is we use console.warn instead of console.error,\n * and do nothing when 'console' is not supported.\n * This really simplifies the code.\n * ---\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar lowPriorityWarning = function () {};\n\n{\n  var printWarning = function (format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.warn(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  lowPriorityWarning = function (condition, format) {\n    if (format === undefined) {\n      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nvar lowPriorityWarning$1 = lowPriorityWarning;\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n              default:\n                return $$typeof;\n            }\n        }\n      case REACT_LAZY_TYPE:\n      case REACT_MEMO_TYPE:\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n}\n\n// AsyncMode is deprecated along with isAsyncMode\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\n\nvar hasWarnedAboutDeprecatedIsAsyncMode = false;\n\n// AsyncMode should be deprecated\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true;\n      lowPriorityWarning$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.typeOf = typeOf;\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isValidElementType = isValidElementType;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\n  })();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/react-is/cjs/react-is.development.js\n// module id = 5\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/prop-types/factoryWithTypeCheckers.js\n// module id = 6\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/object-assign/index.js\n// module id = 7\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/prop-types/lib/ReactPropTypesSecret.js\n// module id = 8\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/prop-types/checkPropTypes.js\n// module id = 9\n// module chunks = 0","/*\n * MIT Licensed\n * http://www.23developer.com/opensource\n * http://github.com/23/resumable.js\n * Steffen Tiedemann Christensen, steffen@23company.com\n */\n\n(function () {\n  \"use strict\";\n\n  var Resumable = function (opts) {\n    if (!(this instanceof Resumable)) {\n      return new Resumable(opts);\n    }\n    this.version = 1.0;\n    // SUPPORTED BY BROWSER?\n    // Check if these features are support by the browser:\n    // - File object type\n    // - Blob object type\n    // - FileList object type\n    // - slicing files\n    this.support =\n      typeof File !== \"undefined\" &&\n      typeof Blob !== \"undefined\" &&\n      typeof FileList !== \"undefined\" &&\n      (!!Blob.prototype.webkitSlice ||\n        !!Blob.prototype.mozSlice ||\n        !!Blob.prototype.slice ||\n        false);\n    if (!this.support) return false;\n\n    // PROPERTIES\n    var $ = this;\n    $.files = [];\n    $.subject = \"\";\n    $.defaults = {\n      chunkSize: 1 * 1024 * 1024,\n      forceChunkSize: false,\n      simultaneousUploads: 3,\n      fileParameterName: \"file\",\n      chunkNumberParameterName: \"resumableChunkNumber\",\n      chunkSizeParameterName: \"resumableChunkSize\",\n      currentChunkSizeParameterName: \"resumableCurrentChunkSize\",\n      totalSizeParameterName: \"resumableTotalSize\",\n      typeParameterName: \"resumableType\",\n      identifierParameterName: \"resumableIdentifier\",\n      fileNameParameterName: \"resumableFilename\",\n      relativePathParameterName: \"resumableRelativePath\",\n      totalChunksParameterName: \"resumableTotalChunks\",\n      subjectParameterName: \"subject\",\n      throttleProgressCallbacks: 0.5,\n      query: {},\n      headers: {},\n      preprocess: null,\n      method: \"multipart\",\n      uploadMethod: \"POST\",\n      testMethod: \"GET\",\n      prioritizeFirstAndLastChunk: false,\n      target: \"/\",\n      testTarget: null,\n      parameterNamespace: \"\",\n      testChunks: true,\n      generateUniqueIdentifier: null,\n      getTarget: null,\n      maxChunkRetries: 100,\n      chunkRetryInterval: undefined,\n      permanentErrors: [400, 404, 415, 500, 501],\n      maxFiles: undefined,\n      withCredentials: false,\n      xhrTimeout: 0,\n      clearInput: true,\n      chunkFormat: \"blob\",\n      setChunkTypeFromFile: false,\n      maxFilesErrorCallback: function (files, errorCount) {\n        var maxFiles = $.getOpt(\"maxFiles\");\n        alert(\n          \"Please upload no more than \" +\n            maxFiles +\n            \" file\" +\n            (maxFiles === 1 ? \"\" : \"s\") +\n            \" at a time.\"\n        );\n      },\n      minFileSize: 1,\n      minFileSizeErrorCallback: function (file, errorCount) {\n        alert(\n          file.fileName ||\n            file.name +\n              \" is too small, please upload files larger than \" +\n              $h.formatSize($.getOpt(\"minFileSize\")) +\n              \".\"\n        );\n      },\n      maxFileSize: undefined,\n      maxFileSizeErrorCallback: function (file, errorCount) {\n        alert(\n          file.fileName ||\n            file.name +\n              \" is too large, please upload files less than \" +\n              $h.formatSize($.getOpt(\"maxFileSize\")) +\n              \".\"\n        );\n      },\n      fileType: [],\n      fileTypeErrorCallback: function (file, errorCount) {\n        alert(\n          file.fileName ||\n            file.name +\n              \" has type not allowed, please upload files of type \" +\n              $.getOpt(\"fileType\") +\n              \".\"\n        );\n      },\n    };\n    $.opts = opts || {};\n    $.getOpt = function (o) {\n      var $opt = this;\n      // Get multiple option if passed an array\n      if (o instanceof Array) {\n        var options = {};\n        $h.each(o, function (option) {\n          options[option] = $opt.getOpt(option);\n        });\n        return options;\n      }\n      // Otherwise, just return a simple option\n      if ($opt instanceof ResumableChunk) {\n        if (typeof $opt.opts[o] !== \"undefined\") {\n          return $opt.opts[o];\n        } else {\n          $opt = $opt.fileObj;\n        }\n      }\n      if ($opt instanceof ResumableFile) {\n        if (typeof $opt.opts[o] !== \"undefined\") {\n          return $opt.opts[o];\n        } else {\n          $opt = $opt.resumableObj;\n        }\n      }\n      if ($opt instanceof Resumable) {\n        if (typeof $opt.opts[o] !== \"undefined\") {\n          return $opt.opts[o];\n        } else {\n          return $opt.defaults[o];\n        }\n      }\n    };\n\n    // EVENTS\n    // catchAll(event, ...)\n    // fileSuccess(file), fileProgress(file), fileAdded(file, event), filesAdded(files, filesSkipped), fileRetry(file),\n    // fileError(file, message), complete(), progress(), error(message, file), pause()\n    $.events = [];\n    $.on = function (event, callback) {\n      $.events.push(event.toLowerCase(), callback);\n    };\n    $.fire = function () {\n      // `arguments` is an object, not array, in FF, so:\n      var args = [];\n      for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n      // Find event listeners, and support pseudo-event `catchAll`\n      var event = args[0].toLowerCase();\n      for (var i = 0; i <= $.events.length; i += 2) {\n        if ($.events[i] == event) $.events[i + 1].apply($, args.slice(1));\n        if ($.events[i] == \"catchall\") $.events[i + 1].apply(null, args);\n      }\n      if (event == \"fileerror\") $.fire(\"error\", args[2], args[1]);\n      if (event == \"fileprogress\") $.fire(\"progress\");\n    };\n\n    // INTERNAL HELPER METHODS (handy, but ultimately not part of uploading)\n    var $h = {\n      stopEvent: function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      },\n      each: function (o, callback) {\n        if (typeof o.length !== \"undefined\") {\n          for (var i = 0; i < o.length; i++) {\n            // Array or FileList\n            if (callback(o[i]) === false) return;\n          }\n        } else {\n          for (i in o) {\n            // Object\n            if (callback(i, o[i]) === false) return;\n          }\n        }\n      },\n      generateUniqueIdentifier: function (file, event) {\n        var custom = $.getOpt(\"generateUniqueIdentifier\");\n        if (typeof custom === \"function\") {\n          return custom(file, event);\n        }\n        var relativePath =\n          file.webkitRelativePath ||\n          file.relativePath ||\n          file.fileName ||\n          file.name; // Some confusion in different versions of Firefox\n        var size = file.size;\n        return size + \"-\" + relativePath.replace(/[^0-9a-zA-Z_-]/gim, \"\");\n      },\n      contains: function (array, test) {\n        var result = false;\n\n        $h.each(array, function (value) {\n          if (value == test) {\n            result = true;\n            return false;\n          }\n          return true;\n        });\n\n        return result;\n      },\n      formatSize: function (size) {\n        if (size < 1024) {\n          return size + \" bytes\";\n        } else if (size < 1024 * 1024) {\n          return (size / 1024.0).toFixed(0) + \" KB\";\n        } else if (size < 1024 * 1024 * 1024) {\n          return (size / 1024.0 / 1024.0).toFixed(1) + \" MB\";\n        } else {\n          return (size / 1024.0 / 1024.0 / 1024.0).toFixed(1) + \" GB\";\n        }\n      },\n      getTarget: function (request, params) {\n        var target = $.getOpt(\"target\");\n\n        if (request === \"test\" && $.getOpt(\"testTarget\")) {\n          target =\n            $.getOpt(\"testTarget\") === \"/\"\n              ? $.getOpt(\"target\")\n              : $.getOpt(\"testTarget\");\n        }\n\n        if (typeof target === \"function\") {\n          return target(params);\n        }\n\n        var separator = target.indexOf(\"?\") < 0 ? \"?\" : \"&\";\n        var joinedParams = params.join(\"&\");\n\n        return target + separator + joinedParams;\n      },\n    };\n\n    var onDrop = function (event) {\n      $h.stopEvent(event);\n\n      //handle dropped things as items if we can (this lets us deal with folders nicer in some cases)\n      if (event.dataTransfer && event.dataTransfer.items) {\n        loadFiles(event.dataTransfer.items, event);\n      }\n      //else handle them as files\n      else if (event.dataTransfer && event.dataTransfer.files) {\n        loadFiles(event.dataTransfer.files, event);\n      }\n    };\n    var preventDefault = function (e) {\n      e.preventDefault();\n    };\n\n    /**\n     * processes a single upload item (file or directory)\n     * @param {Object} item item to upload, may be file or directory entry\n     * @param {string} path current file path\n     * @param {File[]} items list of files to append new items to\n     * @param {Function} cb callback invoked when item is processed\n     */\n    function processItem(item, path, items, cb) {\n      var entry;\n      console.log(\"PROCESSING\");\n      console.log(entry);\n      if (item.isFile) {\n        // file provided\n        return item.file(function (file) {\n          file.relativePath = path + file.name;\n          items.push(file);\n          cb();\n        });\n      } else if (item.isDirectory) {\n        // item is already a directory entry, just assign\n        entry = item;\n      } else if (item instanceof File) {\n        items.push(item);\n      }\n      if (\"function\" === typeof item.webkitGetAsEntry) {\n        // get entry from file object\n        entry = item.webkitGetAsEntry();\n      }\n      if (entry && entry.isDirectory) {\n        // directory provided, process it\n        return processDirectory(entry, path + entry.name + \"/\", items, cb);\n      }\n      if (\"function\" === typeof item.getAsFile) {\n        // item represents a File object, convert it\n        item = item.getAsFile();\n        if (item instanceof File) {\n          item.relativePath = path + item.name;\n          items.push(item);\n        }\n      }\n      cb(); // indicate processing is done\n    }\n\n    /**\n     * cps-style list iteration.\n     * invokes all functions in list and waits for their callback to be\n     * triggered.\n     * @param  {Function[]}   items list of functions expecting callback parameter\n     * @param  {Function} cb    callback to trigger after the last callback has been invoked\n     */\n    function processCallbacks(items, cb) {\n      if (!items || items.length === 0) {\n        // empty or no list, invoke callback\n        return cb();\n      }\n      // invoke current function, pass the next part as continuation\n      items[0](function () {\n        processCallbacks(items.slice(1), cb);\n      });\n    }\n\n    /**\n     * recursively traverse directory and collect files to upload\n     * @param  {Object}   directory directory to process\n     * @param  {string}   path      current path\n     * @param  {File[]}   items     target list of items\n     * @param  {Function} cb        callback invoked after traversing directory\n     */\n    function processDirectory(directory, path, items, cb) {\n      var dirReader = directory.createReader();\n      var queue = [];\n\n      function read(queuedFiles) {\n        dirReader.readEntries(function (entries) {\n          if (entries.length) {\n            // empty directory, skip\n            queuedFiles = queuedFiles.concat(entries);\n            read(queuedFiles);\n          } else {\n            if (queuedFiles.length) {\n              processCallbacks(\n                queuedFiles.map(function (entry) {\n                  // bind all properties except for callback\n                  return processItem.bind(null, entry, path, items);\n                }),\n                cb\n              );\n            } else {\n              cb();\n            }\n          }\n          // process all conversion callbacks, finally invoke own one\n        });\n      }\n      read(queue);\n\n      console.log(items.length);\n      return queue;\n    }\n\n    /**\n     * process items to extract files to be uploaded\n     * @param  {File[]} items items to process\n     * @param  {Event} event event that led to upload\n     */\n    function loadFiles(items, event) {\n      if (!items.length) {\n        return; // nothing to do\n      }\n      $.fire(\"beforeAdd\");\n      var files = [];\n      processCallbacks(\n        Array.prototype.map.call(items, function (item) {\n          // bind all properties except for callback\n          return processItem.bind(null, item, \"\", files);\n        }),\n        function () {\n          if (files.length) {\n            // at least one file found\n            appendFilesFromFileList(files, event);\n          }\n        }\n      );\n    }\n\n    var appendFilesFromFileList = function (fileList, event) {\n      // check for uploading too many files\n      var errorCount = 0;\n      var o = $.getOpt([\n        \"maxFiles\",\n        \"minFileSize\",\n        \"maxFileSize\",\n        \"maxFilesErrorCallback\",\n        \"minFileSizeErrorCallback\",\n        \"maxFileSizeErrorCallback\",\n        \"fileType\",\n        \"fileTypeErrorCallback\",\n      ]);\n      if (\n        typeof o.maxFiles !== \"undefined\" &&\n        o.maxFiles < fileList.length + $.files.length\n      ) {\n        // if single-file upload, file is already added, and trying to add 1 new file, simply replace the already-added file\n        if (o.maxFiles === 1 && $.files.length === 1 && fileList.length === 1) {\n          $.removeFile($.files[0]);\n        } else {\n          o.maxFilesErrorCallback(fileList, errorCount++);\n          return false;\n        }\n      }\n      var files = [],\n        filesSkipped = [],\n        remaining = fileList.length;\n      var decreaseReamining = function () {\n        if (!--remaining) {\n          // all files processed, trigger event\n          if (!files.length && !filesSkipped.length) {\n            // no succeeded files, just skip\n            return;\n          }\n          window.setTimeout(function () {\n            $.fire(\"filesAdded\", files, filesSkipped);\n            console.log(filesSkipped);\n          }, 0);\n        }\n      };\n      $h.each(fileList, function (file) {\n        var fileName = file.name;\n        if (o.fileType.length > 0) {\n          var fileTypeFound = false;\n          for (var index in o.fileType) {\n            var extension = \".\" + o.fileType[index];\n            if (\n              fileName\n                .toLowerCase()\n                .indexOf(\n                  extension.toLowerCase(),\n                  fileName.length - extension.length\n                ) !== -1\n            ) {\n              fileTypeFound = true;\n              break;\n            }\n          }\n          if (!fileTypeFound) {\n            o.fileTypeErrorCallback(file, errorCount++);\n            return false;\n          }\n        }\n\n        if (typeof o.minFileSize !== \"undefined\" && file.size < o.minFileSize) {\n          o.minFileSizeErrorCallback(file, errorCount++);\n          return false;\n        }\n        if (typeof o.maxFileSize !== \"undefined\" && file.size > o.maxFileSize) {\n          o.maxFileSizeErrorCallback(file, errorCount++);\n          return false;\n        }\n\n        function addFile(uniqueIdentifier) {\n          if (!$.getFromUniqueIdentifier(uniqueIdentifier)) {\n            (function () {\n              file.uniqueIdentifier = uniqueIdentifier;\n              var f = new ResumableFile($, file, uniqueIdentifier);\n              $.files.push(f);\n              files.push(f);\n              f.container =\n                typeof event != \"undefined\" ? event.srcElement : null;\n              window.setTimeout(function () {\n                $.fire(\"fileAdded\", f, event);\n              }, 0);\n            })();\n          } else {\n            filesSkipped.push(file);\n          }\n          decreaseReamining();\n        }\n        // directories have size == 0\n        var uniqueIdentifier = $h.generateUniqueIdentifier(file, event);\n        if (uniqueIdentifier && typeof uniqueIdentifier.then === \"function\") {\n          // Promise or Promise-like object provided as unique identifier\n          uniqueIdentifier.then(\n            function (uniqueIdentifier) {\n              // unique identifier generation succeeded\n              addFile(uniqueIdentifier);\n            },\n            function () {\n              // unique identifier generation failed\n              // skip further processing, only decrease file count\n              decreaseReamining();\n            }\n          );\n        } else {\n          // non-Promise provided as unique identifier, process synchronously\n          addFile(uniqueIdentifier);\n        }\n      });\n    };\n\n    // INTERNAL OBJECT TYPES\n    function ResumableFile(resumableObj, file, uniqueIdentifier) {\n      var $ = this;\n      $.opts = {};\n      $.getOpt = resumableObj.getOpt;\n      $.subject = resumableObj.subject;\n      $._prevProgress = 0;\n      $.resumableObj = resumableObj;\n      $.file = file;\n      $.fileName = file.fileName || file.name; // Some confusion in different versions of Firefox\n      $.size = file.size;\n      $.relativePath =\n        file.relativePath || file.webkitRelativePath || $.fileName;\n      $.uniqueIdentifier = uniqueIdentifier;\n      $._pause = false;\n      $.container = \"\";\n      var _error = uniqueIdentifier !== undefined;\n\n      // Callback when something happens within the chunk\n      var chunkEvent = function (event, message) {\n        // event can be 'progress', 'success', 'error' or 'retry'\n        switch (event) {\n          case \"progress\":\n            $.resumableObj.fire(\"fileProgress\", $, message);\n            break;\n          case \"error\":\n            $.abort();\n            _error = true;\n            $.chunks = [];\n            $.resumableObj.fire(\"fileError\", $, message);\n            break;\n          case \"success\":\n            if (_error) return;\n            $.resumableObj.fire(\"fileProgress\", $); // it's at least progress\n            if ($.isComplete()) {\n              $.resumableObj.fire(\"fileSuccess\", $, message);\n            }\n            break;\n          case \"retry\":\n            $.resumableObj.fire(\"fileRetry\", $);\n            break;\n        }\n      };\n\n      // Main code to set up a file object with chunks,\n      // packaged to be able to handle retries if needed.\n      $.chunks = [];\n      $.abort = function () {\n        // Stop current uploads\n        var abortCount = 0;\n        $h.each($.chunks, function (c) {\n          if (c.status() == \"uploading\") {\n            c.abort();\n            abortCount++;\n          }\n        });\n        if (abortCount > 0) $.resumableObj.fire(\"fileProgress\", $);\n      };\n      $.cancel = function () {\n        // Reset this file to be void\n        var _chunks = $.chunks;\n        $.chunks = [];\n        // Stop current uploads\n        $h.each(_chunks, function (c) {\n          if (c.status() == \"uploading\") {\n            c.abort();\n            $.resumableObj.uploadNextChunk();\n          }\n        });\n        $.resumableObj.removeFile($);\n        $.resumableObj.fire(\"fileProgress\", $);\n      };\n      $.retry = function () {\n        $.bootstrap();\n        var firedRetry = false;\n        $.resumableObj.on(\"chunkingComplete\", function () {\n          if (!firedRetry) $.resumableObj.upload();\n          firedRetry = true;\n        });\n      };\n      $.bootstrap = function () {\n        $.abort();\n        _error = false;\n        // Rebuild stack of chunks from file\n        $.chunks = [];\n        $._prevProgress = 0;\n        var round = $.getOpt(\"forceChunkSize\") ? Math.ceil : Math.floor;\n        var maxOffset = Math.max(round($.file.size / $.getOpt(\"chunkSize\")), 1);\n        for (var offset = 0; offset < maxOffset; offset++) {\n          (function (offset) {\n            window.setTimeout(function () {\n              $.chunks.push(\n                new ResumableChunk($.resumableObj, $, offset, chunkEvent)\n              );\n              $.resumableObj.fire(\"chunkingProgress\", $, offset / maxOffset);\n            }, 0);\n          })(offset);\n        }\n        window.setTimeout(function () {\n          $.resumableObj.fire(\"chunkingComplete\", $);\n        }, 0);\n      };\n      $.progress = function () {\n        if (_error) return 1;\n        // Sum up progress across everything\n        var ret = 0;\n        var error = false;\n        $h.each($.chunks, function (c) {\n          if (c.status() == \"error\") error = true;\n          ret += c.progress(true); // get chunk progress relative to entire file\n        });\n        ret = error ? 1 : ret > 0.99999 ? 1 : ret;\n        ret = Math.max($._prevProgress, ret); // We don't want to lose percentages when an upload is paused\n        $._prevProgress = ret;\n        return ret;\n      };\n      $.isUploading = function () {\n        var uploading = false;\n        $h.each($.chunks, function (chunk) {\n          if (chunk.status() == \"uploading\") {\n            uploading = true;\n            return false;\n          }\n        });\n        return uploading;\n      };\n      $.isComplete = function () {\n        var outstanding = false;\n        $h.each($.chunks, function (chunk) {\n          var status = chunk.status();\n          if (\n            status == \"pending\" ||\n            status == \"uploading\" ||\n            chunk.preprocessState === 1\n          ) {\n            outstanding = true;\n            return false;\n          }\n        });\n        return !outstanding;\n      };\n      $.pause = function (pause) {\n        if (typeof pause === \"undefined\") {\n          $._pause = $._pause ? false : true;\n        } else {\n          $._pause = pause;\n        }\n      };\n      $.isPaused = function () {\n        return $._pause;\n      };\n\n      // Bootstrap and return\n      $.resumableObj.fire(\"chunkingStart\", $);\n      $.bootstrap();\n      return this;\n    }\n\n    function ResumableChunk(resumableObj, fileObj, offset, callback) {\n      var $ = this;\n      $.opts = {};\n      $.getOpt = resumableObj.getOpt;\n      $.subject = resumableObj.subject;\n      $.resumableObj = resumableObj;\n      $.fileObj = fileObj;\n      $.fileObjSize = fileObj.size;\n      $.fileObjType = fileObj.file.type;\n      $.offset = offset;\n      $.callback = callback;\n      $.lastProgressCallback = new Date();\n      $.tested = false;\n      $.retries = 0;\n      $.pendingRetry = false;\n      $.preprocessState = 0; // 0 = unprocessed, 1 = processing, 2 = finished\n\n      // Computed properties\n      var chunkSize = $.getOpt(\"chunkSize\");\n      $.loaded = 0;\n      $.startByte = $.offset * chunkSize;\n      $.endByte = Math.min($.fileObjSize, ($.offset + 1) * chunkSize);\n      if (\n        $.fileObjSize - $.endByte < chunkSize &&\n        !$.getOpt(\"forceChunkSize\")\n      ) {\n        // The last chunk will be bigger than the chunk size, but less than 2*chunkSize\n        $.endByte = $.fileObjSize;\n      }\n      $.xhr = null;\n\n      // test() makes a GET request without any data to see if the chunk has already been uploaded in a previous session\n      $.test = function () {\n        // Set up request and listen for event\n        $.xhr = new XMLHttpRequest();\n\n        var testHandler = function (e) {\n          $.tested = true;\n          var status = $.status();\n          if (status == \"success\") {\n            $.callback(status, $.message());\n            $.resumableObj.uploadNextChunk();\n          } else {\n            $.send();\n          }\n        };\n        $.xhr.addEventListener(\"load\", testHandler, false);\n        $.xhr.addEventListener(\"error\", testHandler, false);\n        $.xhr.addEventListener(\"timeout\", testHandler, false);\n\n        // Add data from the query options\n        var params = [];\n        var parameterNamespace = $.getOpt(\"parameterNamespace\");\n        var customQuery = $.getOpt(\"query\");\n        if (typeof customQuery == \"function\")\n          customQuery = customQuery($.fileObj, $);\n        $h.each(customQuery, function (k, v) {\n          params.push(\n            [\n              encodeURIComponent(parameterNamespace + k),\n              encodeURIComponent(v),\n            ].join(\"=\")\n          );\n        });\n        // Add extra data to identify chunk\n        params = params.concat(\n          [\n            // define key/value pairs for additional parameters\n            [\"chunkNumberParameterName\", $.offset + 1],\n            [\"chunkSizeParameterName\", $.getOpt(\"chunkSize\")],\n            [\"currentChunkSizeParameterName\", $.endByte - $.startByte],\n            [\"totalSizeParameterName\", $.fileObjSize],\n            [\"typeParameterName\", $.fileObjType],\n            [\"identifierParameterName\", $.fileObj.uniqueIdentifier],\n            [\"fileNameParameterName\", $.fileObj.fileName],\n            [\"relativePathParameterName\", $.fileObj.relativePath],\n            [\"totalChunksParameterName\", $.fileObj.chunks.length],\n            [\"subjectParameterName\", $.subject],\n          ]\n            .filter(function (pair) {\n              // include items that resolve to truthy values\n              // i.e. exclude false, null, undefined and empty strings\n              return $.getOpt(pair[0]);\n            })\n            .map(function (pair) {\n              // map each key/value pair to its final form\n              return [\n                parameterNamespace + $.getOpt(pair[0]),\n                encodeURIComponent(pair[1]),\n              ].join(\"=\");\n            })\n        );\n        // Append the relevant chunk and send it\n        $.xhr.open($.getOpt(\"testMethod\"), $h.getTarget(\"test\", params));\n        $.xhr.timeout = $.getOpt(\"xhrTimeout\");\n        $.xhr.withCredentials = $.getOpt(\"withCredentials\");\n        // Add data from header options\n        var customHeaders = $.getOpt(\"headers\");\n        if (typeof customHeaders === \"function\") {\n          customHeaders = customHeaders($.fileObj, $);\n        }\n        $h.each(customHeaders, function (k, v) {\n          $.xhr.setRequestHeader(k, v);\n        });\n        $.xhr.send(null);\n      };\n\n      $.preprocessFinished = function () {\n        $.preprocessState = 2;\n        $.send();\n      };\n\n      // send() uploads the actual data in a POST call\n      $.send = function () {\n        var preprocess = $.getOpt(\"preprocess\");\n        if (typeof preprocess === \"function\") {\n          switch ($.preprocessState) {\n            case 0:\n              $.preprocessState = 1;\n              preprocess($);\n              return;\n            case 1:\n              return;\n            case 2:\n              break;\n          }\n        }\n        if ($.getOpt(\"testChunks\") && !$.tested) {\n          $.test();\n          return;\n        }\n\n        // Set up request and listen for event\n        $.xhr = new XMLHttpRequest();\n\n        // Progress\n        $.xhr.upload.addEventListener(\n          \"progress\",\n          function (e) {\n            if (\n              new Date() - $.lastProgressCallback >\n              $.getOpt(\"throttleProgressCallbacks\") * 1000\n            ) {\n              $.callback(\"progress\");\n              $.lastProgressCallback = new Date();\n            }\n            $.loaded = e.loaded || 0;\n          },\n          false\n        );\n        $.loaded = 0;\n        $.pendingRetry = false;\n        $.callback(\"progress\");\n\n        // Done (either done, failed or retry)\n        var doneHandler = function (e) {\n          var status = $.status();\n          if (status == \"success\" || status == \"error\") {\n            $.callback(status, $.message());\n            $.resumableObj.uploadNextChunk();\n          } else {\n            $.callback(\"retry\", $.message());\n            $.abort();\n            $.retries++;\n            var retryInterval = $.getOpt(\"chunkRetryInterval\");\n            if (retryInterval !== undefined) {\n              $.pendingRetry = true;\n              setTimeout($.send, retryInterval);\n            } else {\n              $.send();\n            }\n          }\n        };\n        $.xhr.addEventListener(\"load\", doneHandler, false);\n        $.xhr.addEventListener(\"error\", doneHandler, false);\n        $.xhr.addEventListener(\"timeout\", doneHandler, false);\n\n        // Set up the basic query data from Resumable\n        var query = [\n          [\"chunkNumberParameterName\", $.offset + 1],\n          [\"chunkSizeParameterName\", $.getOpt(\"chunkSize\")],\n          [\"currentChunkSizeParameterName\", $.endByte - $.startByte],\n          [\"totalSizeParameterName\", $.fileObjSize],\n          [\"typeParameterName\", $.fileObjType],\n          [\"identifierParameterName\", $.fileObj.uniqueIdentifier],\n          [\"fileNameParameterName\", $.fileObj.fileName],\n          [\"relativePathParameterName\", $.fileObj.relativePath],\n          [\"totalChunksParameterName\", $.fileObj.chunks.length],\n          [\"subjectParameterName\", $.subject],\n        ]\n          .filter(function (pair) {\n            // include items that resolve to truthy values\n            // i.e. exclude false, null, undefined and empty strings\n            return $.getOpt(pair[0]);\n          })\n          .reduce(function (query, pair) {\n            // assign query key/value\n            query[$.getOpt(pair[0])] = pair[1];\n            return query;\n          }, {});\n        // Mix in custom data\n        var customQuery = $.getOpt(\"query\");\n        if (typeof customQuery == \"function\")\n          customQuery = customQuery($.fileObj, $);\n        $h.each(customQuery, function (k, v) {\n          query[k] = v;\n        });\n\n        var func = $.fileObj.file.slice\n          ? \"slice\"\n          : $.fileObj.file.mozSlice\n          ? \"mozSlice\"\n          : $.fileObj.file.webkitSlice\n          ? \"webkitSlice\"\n          : \"slice\";\n        var bytes = $.fileObj.file[func](\n          $.startByte,\n          $.endByte,\n          $.getOpt(\"setChunkTypeFromFile\") ? $.fileObj.file.type : \"\"\n        );\n        var data = null;\n        var params = [];\n\n        var parameterNamespace = $.getOpt(\"parameterNamespace\");\n        if ($.getOpt(\"method\") === \"octet\") {\n          // Add data from the query options\n          data = bytes;\n          $h.each(query, function (k, v) {\n            params.push(\n              [\n                encodeURIComponent(parameterNamespace + k),\n                encodeURIComponent(v),\n              ].join(\"=\")\n            );\n          });\n        } else {\n          // Add data from the query options\n          data = new FormData();\n          $h.each(query, function (k, v) {\n            data.append(parameterNamespace + k, v);\n            params.push(\n              [\n                encodeURIComponent(parameterNamespace + k),\n                encodeURIComponent(v),\n              ].join(\"=\")\n            );\n          });\n          if ($.getOpt(\"chunkFormat\") == \"blob\") {\n            data.append(\n              parameterNamespace + $.getOpt(\"fileParameterName\"),\n              bytes,\n              $.fileObj.fileName\n            );\n          } else if ($.getOpt(\"chunkFormat\") == \"base64\") {\n            var fr = new FileReader();\n            fr.onload = function (e) {\n              data.append(\n                parameterNamespace + $.getOpt(\"fileParameterName\"),\n                fr.result\n              );\n              $.xhr.send(data);\n            };\n            fr.readAsDataURL(bytes);\n          }\n        }\n\n        var target = $h.getTarget(\"upload\", params);\n        var method = $.getOpt(\"uploadMethod\");\n\n        $.xhr.open(method, target);\n        if ($.getOpt(\"method\") === \"octet\") {\n          $.xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n        }\n        $.xhr.timeout = $.getOpt(\"xhrTimeout\");\n        $.xhr.withCredentials = $.getOpt(\"withCredentials\");\n        // Add data from header options\n        var customHeaders = $.getOpt(\"headers\");\n        if (typeof customHeaders === \"function\") {\n          customHeaders = customHeaders($.fileObj, $);\n        }\n\n        $h.each(customHeaders, function (k, v) {\n          $.xhr.setRequestHeader(k, v);\n        });\n\n        if ($.getOpt(\"chunkFormat\") == \"blob\") {\n          $.xhr.send(data);\n        }\n      };\n      $.abort = function () {\n        // Abort and reset\n        if ($.xhr) $.xhr.abort();\n        $.xhr = null;\n      };\n      $.status = function () {\n        // Returns: 'pending', 'uploading', 'success', 'error'\n        if ($.pendingRetry) {\n          // if pending retry then that's effectively the same as actively uploading,\n          // there might just be a slight delay before the retry starts\n          return \"uploading\";\n        } else if (!$.xhr) {\n          return \"pending\";\n        } else if ($.xhr.readyState < 4) {\n          // Status is really 'OPENED', 'HEADERS_RECEIVED' or 'LOADING' - meaning that stuff is happening\n          return \"uploading\";\n        } else {\n          if ($.xhr.status == 200 || $.xhr.status == 201) {\n            // HTTP 200, 201 (created)\n            return \"success\";\n          } else if (\n            $h.contains($.getOpt(\"permanentErrors\"), $.xhr.status) ||\n            $.retries >= $.getOpt(\"maxChunkRetries\")\n          ) {\n            // HTTP 415/500/501, permanent error\n            return \"error\";\n          } else {\n            // this should never happen, but we'll reset and queue a retry\n            // a likely case for this would be 503 service unavailable\n            $.abort();\n            return \"pending\";\n          }\n        }\n      };\n      $.message = function () {\n        return $.xhr ? $.xhr.responseText : \"\";\n      };\n      $.progress = function (relative) {\n        if (typeof relative === \"undefined\") relative = false;\n        var factor = relative ? ($.endByte - $.startByte) / $.fileObjSize : 1;\n        if ($.pendingRetry) return 0;\n        if (!$.xhr || !$.xhr.status) factor *= 0.95;\n        var s = $.status();\n        switch (s) {\n          case \"success\":\n          case \"error\":\n            return 1 * factor;\n          case \"pending\":\n            return 0 * factor;\n          default:\n            return ($.loaded / ($.endByte - $.startByte)) * factor;\n        }\n      };\n      return this;\n    }\n\n    // QUEUE\n    $.uploadNextChunk = function () {\n      var found = false;\n\n      // In some cases (such as videos) it's really handy to upload the first\n      // and last chunk of a file quickly; this let's the server check the file's\n      // metadata and determine if there's even a point in continuing.\n      if ($.getOpt(\"prioritizeFirstAndLastChunk\")) {\n        $h.each($.files, function (file) {\n          if (\n            file.chunks.length &&\n            file.chunks[0].status() == \"pending\" &&\n            file.chunks[0].preprocessState === 0\n          ) {\n            file.chunks[0].send();\n            found = true;\n            return false;\n          }\n          if (\n            file.chunks.length > 1 &&\n            file.chunks[file.chunks.length - 1].status() == \"pending\" &&\n            file.chunks[file.chunks.length - 1].preprocessState === 0\n          ) {\n            file.chunks[file.chunks.length - 1].send();\n            found = true;\n            return false;\n          }\n        });\n        if (found) return true;\n      }\n\n      // Now, simply look for the next, best thing to upload\n      $h.each($.files, function (file) {\n        if (file.isPaused() === false) {\n          $h.each(file.chunks, function (chunk) {\n            if (chunk.status() == \"pending\" && chunk.preprocessState === 0) {\n              chunk.send();\n              found = true;\n              return false;\n            }\n          });\n        }\n        if (found) return false;\n      });\n      if (found) return true;\n\n      // The are no more outstanding chunks to upload, check is everything is done\n      var outstanding = false;\n      $h.each($.files, function (file) {\n        if (!file.isComplete()) {\n          outstanding = true;\n          return false;\n        }\n      });\n      if (!outstanding) {\n        // All chunks have been uploaded, complete\n        $.fire(\"complete\");\n      }\n      return false;\n    };\n\n    // PUBLIC METHODS FOR RESUMABLE.JS\n    $.assignBrowse = function (domNodes, isDirectory) {\n      if (typeof domNodes.length == \"undefined\") domNodes = [domNodes];\n\n      $h.each(domNodes, function (domNode) {\n        var input;\n        if (domNode.tagName === \"INPUT\" && domNode.type === \"file\") {\n          input = domNode;\n        } else {\n          input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"file\");\n          input.style.display = \"none\";\n          domNode.addEventListener(\n            \"click\",\n            function () {\n              input.style.opacity = 0;\n              input.style.display = \"block\";\n              input.focus();\n              input.click();\n              input.style.display = \"none\";\n            },\n            false\n          );\n          domNode.appendChild(input);\n        }\n        var maxFiles = $.getOpt(\"maxFiles\");\n        if (typeof maxFiles === \"undefined\" || maxFiles != 1) {\n          input.setAttribute(\"multiple\", \"multiple\");\n        } else {\n          input.removeAttribute(\"multiple\");\n        }\n        if (isDirectory) {\n          input.setAttribute(\"webkitdirectory\", \"webkitdirectory\");\n        } else {\n          input.removeAttribute(\"webkitdirectory\");\n        }\n        var fileTypes = $.getOpt(\"fileType\");\n        if (typeof fileTypes !== \"undefined\" && fileTypes.length >= 1) {\n          input.setAttribute(\n            \"accept\",\n            fileTypes\n              .map(function (e) {\n                return \".\" + e;\n              })\n              .join(\",\")\n          );\n        } else {\n          input.removeAttribute(\"accept\");\n        }\n        // When new files are added, simply append them to the overall list\n        input.addEventListener(\n          \"change\",\n          function (e) {\n            appendFilesFromFileList(e.target.files, e);\n            var clearInput = $.getOpt(\"clearInput\");\n            if (clearInput) {\n              e.target.value = \"\";\n            }\n          },\n          false\n        );\n      });\n    };\n    $.assignDrop = function (domNodes) {\n      if (typeof domNodes.length == \"undefined\") domNodes = [domNodes];\n\n      $h.each(domNodes, function (domNode) {\n        domNode.addEventListener(\"dragover\", preventDefault, false);\n        domNode.addEventListener(\"dragenter\", preventDefault, false);\n        domNode.addEventListener(\"drop\", onDrop, false);\n      });\n    };\n    $.unAssignDrop = function (domNodes) {\n      if (typeof domNodes.length == \"undefined\") domNodes = [domNodes];\n\n      $h.each(domNodes, function (domNode) {\n        domNode.removeEventListener(\"dragover\", preventDefault);\n        domNode.removeEventListener(\"dragenter\", preventDefault);\n        domNode.removeEventListener(\"drop\", onDrop);\n      });\n    };\n    $.isUploading = function () {\n      var uploading = false;\n      $h.each($.files, function (file) {\n        if (file.isUploading()) {\n          uploading = true;\n          return false;\n        }\n      });\n      return uploading;\n    };\n    $.upload = function () {\n      // Make sure we don't start too many uploads at once\n      if ($.isUploading()) return;\n      // Kick off the queue\n      $.fire(\"uploadStart\");\n      for (var num = 1; num <= $.getOpt(\"simultaneousUploads\"); num++) {\n        $.uploadNextChunk();\n      }\n    };\n    $.pause = function () {\n      // Resume all chunks currently being uploaded\n      $h.each($.files, function (file) {\n        file.abort();\n      });\n      $.fire(\"pause\");\n    };\n    $.cancel = function () {\n      $.fire(\"beforeCancel\");\n      for (var i = $.files.length - 1; i >= 0; i--) {\n        $.files[i].cancel();\n      }\n      $.fire(\"cancel\");\n    };\n    $.progress = function () {\n      var totalDone = 0;\n      var totalSize = 0;\n      // Resume all chunks currently being uploaded\n      $h.each($.files, function (file) {\n        totalDone += file.progress() * file.size;\n        totalSize += file.size;\n      });\n      return totalSize > 0 ? totalDone / totalSize : 0;\n    };\n    $.addFile = function (file, event) {\n      appendFilesFromFileList([file], event);\n    };\n    $.addFiles = function (files, event) {\n      appendFilesFromFileList(files, event);\n    };\n    $.removeFile = function (file) {\n      for (var i = $.files.length - 1; i >= 0; i--) {\n        if ($.files[i] === file) {\n          $.files.splice(i, 1);\n        }\n      }\n    };\n    $.getFromUniqueIdentifier = function (uniqueIdentifier) {\n      var ret = false;\n      $h.each($.files, function (f) {\n        if (f.uniqueIdentifier == uniqueIdentifier) ret = f;\n      });\n      return ret;\n    };\n    $.getSize = function () {\n      var totalSize = 0;\n      $h.each($.files, function (file) {\n        totalSize += file.size;\n      });\n      return totalSize;\n    };\n    $.handleDropEvent = function (e) {\n      onDrop(e);\n    };\n    $.handleChangeEvent = function (e) {\n      appendFilesFromFileList(e.target.files, e);\n      e.target.value = \"\";\n    };\n    $.updateQuery = function (query) {\n      $.opts.query = query;\n    };\n\n    return this;\n  };\n\n  // Node.js-style export for Node and Component\n  if (typeof module != \"undefined\") {\n    module.exports = Resumable;\n  } else if (typeof define === \"function\" && define.amd) {\n    // AMD/requirejs: Define the module\n    define(function () {\n      return Resumable;\n    });\n  } else {\n    // Browser: Expose to window\n    window.Resumable = Resumable;\n  }\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/resumablejs/resumable.js\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}